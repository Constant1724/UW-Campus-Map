1. How has the View and Controller been split in your code? Think about how React splits up the same.
    The JS classes corresponding to view part are: DropDownMenu, Mycanvas, SubmitButton and another Button tag
    in the App class. These classes only handles how to display the data, which are passed as props.

    The App class corresponds to the Controller Part, it maintains the logic of the whole UI system,
     makes requests to backend server upon some actions, handles possible exceptions.

2. What decisions did you make when you refactored your code to work with Spring?
    None.
    I did not refactor my previous code as doing that will affect backward compatibility.
    Instead, i make a service wrapper for CampusMapModel.

3. What decisions did you make when designing your API?
    First, i reason about what functionality does the web UI requires.
    It turns out the basic functionality is to get a list of available buildings
    and to find Path between any two buildings.
    As a result, my design only consists of theses two methods.

    Since the API accepts parameter from web request, which will be String, I decide to
    make the corresponding back-end method to take Strings as parameter. To make the backend
    robust, it will throw exception upon invalid parameters.

4. What additional functionality did you add that you would like us to consider for Extra Credit?
    no.

# START_TEST
# NAME FindSimpleShortest
# test a graph can be loaded and correctly find the path from A to B, with least
# cost, as cost being the alphabetical ordering of edges and labels..

# Create a graph
created graph graph1

# AddNode
added node ValidNode1 to graph1
added node ValidNode2 to graph1
added node ValidNode3 to graph1
added node ValidNode4 to graph1
added node ValidNode5 to graph1
added node ValidNode6 to graph1
added node ValidNode7 to graph1
added node ValidNode8 to graph1
added node ValidNode9 to graph1

# make cost 12 = 0.1
added edge 0.100 from ValidNode1 to ValidNode2 in graph1


# make cost 13 = 0.111
added edge 0.111 from ValidNode1 to ValidNode3 in graph1


# make cost 14 = 0.125
added edge 0.125 from ValidNode1 to ValidNode4 in graph1


# make cost 15 = 0.143
added edge 0.143 from ValidNode1 to ValidNode5 in graph1


# make cost 16 = 0.167
added edge 0.167 from ValidNode1 to ValidNode6 in graph1


# make cost 17 = 0.333
added edge 0.333 from ValidNode1 to ValidNode7 in graph1


# make cost 18 = 0.500
added edge 0.500 from ValidNode1 to ValidNode8 in graph1


# make cost 19 = 1.000
added edge 1.000 from ValidNode1 to ValidNode9 in graph1

path from ValidNode1 to ValidNode6:
ValidNode1 to ValidNode6 with weight 0.167
total cost: 0.167

path from ValidNode1 to ValidNode5:
ValidNode1 to ValidNode5 with weight 0.143
total cost: 0.143

path from ValidNode1 to ValidNode9:
ValidNode1 to ValidNode9 with weight 1.000
total cost: 1.000

path from ValidNode1 to ValidNode3:
ValidNode1 to ValidNode3 with weight 0.111
total cost: 0.111

path from ValidNode1 to ValidNode8:
ValidNode1 to ValidNode8 with weight 0.500
total cost: 0.500

path from ValidNode1 to ValidNode7:
ValidNode1 to ValidNode7 with weight 0.333
total cost: 0.333

path from ValidNode1 to ValidNode4:
ValidNode1 to ValidNode4 with weight 0.125
total cost: 0.125

path from ValidNode1 to ValidNode2:
ValidNode1 to ValidNode2 with weight 0.100
total cost: 0.100

# END_TEST